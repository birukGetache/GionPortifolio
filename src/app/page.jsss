"use client"; // Ensures that the component is rendered client-side only
import { useState, useEffect } from "react";
import Text from "./components/text";
import Navbar from "./components/Nav";
import About from "./components/About";
import Services from "./components/Service";
import Team from "./components/Team";
import Project from "./components/Project";
import Partner from "./components/Partner";
import Fotter from "./components/Fotter";
import AutoIncreaseCounter from "./components/AutoIncreaseCounter";

export default function Home() {
  const [visibleSections, setVisibleSections] = useState({});
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    // Ensure IntersectionObserver is only used in the browser
    if (typeof window !== "undefined") {
      // Mark as client-side
      setIsClient(true);

      // Select all sections on the page
      const sections = document.querySelectorAll("section");

      // Create IntersectionObserver to monitor visibility
      const observer = new IntersectionObserver((entries) => {
        setVisibleSections((prev) => {
          const newVisibleSections = { ...prev }; // Copy the current state
          entries.forEach((entry) => {
            newVisibleSections[entry.target.id] = entry.isIntersecting;
          });
          console.log(newVisibleSections); // Log the updated state
          return newVisibleSections;
        });
      }, { threshold: [0, 1] }); // Monitor both when 20% and 100% of the section is visible

      // Observe all sections
      sections.forEach((section) => observer.observe(section));

      // Cleanup observer on component unmount
      return () => observer.disconnect();
    }
  }, []); // Empty dependency array to run only once

  if (!isClient) {
    return null; // Prevent SSR issues
  }

  return (
    <div className="w-screen" id="home">
      <img src="/grid.svg" alt="grid" style={{ height: "100vh" }} />
      <div className="absolute top-0 w-screen lg:h-screen flex items-center justify-center flex-col">
        {/* Navbar stays fixed */}
        <Navbar className="self-start" />
        {/* Text centered within remaining space */}
        <Text />
        <AutoIncreaseCounter />
      </div>

      <div className="relative sm:mt-20 md:mt-20">
        <About isVisible={visibleSections.about} />
      </div>
      <Services isVisible={visibleSections.services} />
      <Team isVisible={visibleSections.team} />
      <Project isVisible={visibleSections.project} />
      <Partner isVisible={visibleSections.partner} />
      <Fotter isVisible={visibleSections.fotter} />
    </div>
  );
}
